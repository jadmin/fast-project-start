/* Automatic generated by CrudCodeGenerator wirtten by Gerald Chen
 *
 * @(#)${Entity}Service.java	${date}
 *
 * Copyright (c) ${year}. All Rights Reserved.
 *
 */

package ${serviceApiPackage};

import java.util.List;

import ${entityPackage}.${Entity}${entitySuffix};
import ${entityQueryPackage}.${Entity}Query;
import com.github.javaclub.sword.domain.QueryResult;
import com.github.javaclub.sword.domain.ResultDO;
import com.github.javaclub.sword.domain.dto.BatchOperationDTO;

/**
 * ${Entity}Service
 *
 * @version $Id: ${Entity}Service.java ${datetime} Exp $
 */
public interface ${Entity}Service {

	/**
	 * 创建或更新业务实体（${Entity}${entitySuffix}）
	 * 
	 * @param ${entity}${entitySuffix} 业务实体
	 * @return 操作结果
	 */
	ResultDO<Boolean> save(${Entity}${entitySuffix} ${entity}${entitySuffix});

	/**
	 * 创建业务实体（${Entity}${entitySuffix}）
	 * 
	 * @param ${entity}${entitySuffix} 业务实体
	 * @return 创建结果
	 */
	ResultDO<Boolean> create(${Entity}${entitySuffix} ${entity}${entitySuffix});
	
	/**
	 * 批量创建业务实体（${Entity}${entitySuffix}）
	 * 
	 * @param list 业务实体列表集合
	 * @return 批量处理结果
	 */
	BatchOperationDTO<${Entity}${entitySuffix}> createBatch(List<${Entity}${entitySuffix}> list);
	
	/**
	 * 更新业务实体（${Entity}${entitySuffix}）
	 * 
	 * @param ${entity}${entitySuffix} 业务实体
	 * @return 更新结果
	 */
	ResultDO<Boolean> update(${Entity}${entitySuffix} ${entity}${entitySuffix});
	
	/**
	 * 根据主键删除单个业务实体（${Entity}${entitySuffix}）
	 * 
	 * @param id 业务实体的主键ID
	 * @return 删除结果
	 */
	ResultDO<Boolean> deleteById(${pkClass} id);
	
	/**
	 * 根据主键查询单个业务实体（${Entity}${entitySuffix}）
	 * 
	 * @param id 业务实体的主键ID
	 * @return 查询结果
	 */
	ResultDO<${Entity}${entitySuffix}> getById(${pkClass} id);
	
	${Entity}${entitySuffix} selectById(${pkClass} id);
	
	${Entity}${entitySuffix} selectOne(${Entity}Query query);

	/**
	 * 根据一组查询条件统计总数
	 * 
	 * @param query 查询条件
	 * @return 满足查询条件的记录总数
	 */
	int count(${Entity}Query query);
	
	/**
	 * 根据一组查询条件查询业务实体列表
	 * 
	 * @param query 查询条件
	 * @return 业务实体列表集合
	 */
	List<${Entity}${entitySuffix}> findList(${Entity}Query query);
	
	/**
	 * 根据一组查询条件查询业务实体列表，同时返回总记录数
	 * 
	 * @param query 查询条件
	 * @return 查询结果（含总记录数）
	 */
	QueryResult<${Entity}${entitySuffix}> findListWithCount(${Entity}Query query);
}
