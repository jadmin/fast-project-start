<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- Automatic generated on ${currentTime} by CrudCodeGenerator wirtten by Gerald Chen -->

<mapper namespace="${packagePrefix}.dao.BlackWhiteListDAO">

	<resultMap type="${packagePrefix}.dataobject.BlackWhiteListDO" id="blackWhiteListMap">
        <result property="id" column="id" />
        <result property="gmtCreate" column="gmt_create" />
        <result property="gmtModify" column="gmt_modified" />
        <result property="creator" column="creator" />
        <result property="modifier" column="modifier" />
        <result property="bizCode" column="biz_code" />
        <result property="identity" column="identity" />
        <result property="type" column="type" />
        <result property="comment" column="comment" />
        <result property="relationId" column="relation_id" />
        <result property="creatorId" column="creator_id" />
        <result property="expireType" column="expire_type" />
        <result property="expireTime" column="expire_time" />
        <result property="isDeleted" column="is_deleted" />
        <result property="attributes" column="attributes" />

    </resultMap>
    
    <sql id="AllColumns">
		id,
		gmt_create,
		gmt_modified,
		creator,
		modifier,
		biz_code,
		identity,
		type,
		comment,
		relation_id,
		creator_id,
		expire_type,
		expire_time,
		is_deleted,
		attributes
    </sql>
    
    <sql id="InfoManageSet">
        <set>
			<if test="1 == 1">gmt_modified=now(),</if>
			<if test="creator != null">creator=#{creator},</if>
			<if test="modifier != null">modifier=#{modifier},</if>
			<if test="bizCode != null">biz_code=#{bizCode},</if>
			<if test="identity != null">identity=#{identity},</if>
			<if test="type != null">type=#{type},</if>
			<if test="comment != null">comment=#{comment},</if>
			<if test="relationId != null">relation_id=#{relationId},</if>
			<if test="creatorId != null">creator_id=#{creatorId},</if>
			<if test="expireType != null">expire_type=#{expireType},</if>
			<if test="expireTime != null">expire_time=#{expireTime},</if>
			<if test="isDeleted != null">is_deleted=#{isDeleted},</if>
			<if test="attributes != null">attributes=#{attributes},</if>

        </set>
    </sql>
    
    <sql id="Where_QueryCondition">
        <where>
			<if test="id != null">
			    id = #{id} 
			</if>
     		<if test="bizCode != null">
			    AND biz_code = #{bizCode} 
     		</if>
     		<if test="identity != null">
			    AND identity = #{identity} 
     		</if>
     		<if test="type != null">
			    AND type = #{type} 
     		</if>
     		<if test="expireType != null">
			    AND expire_type = #{expireType} 
     		</if>
     		<if test="comment != null">
			    AND comment = #{comment} 
     		</if>
     		<if test="isDeleted != null">
			    AND is_deleted = #{isDeleted} 
     		</if>
     		<if test="creatorLike != null">
				AND creator LIKE concat('%', #{creatorLike}, '%')
     		</if>
     		<if test="modifierLike != null">
				AND modifier LIKE concat('%', #{modifierLike}, '%')
     		</if>

			<if test="maxPageId != null and lastGmtCreate != null">
				<![CDATA[
            	AND ((gmt_create = #{lastGmtCreate} AND id < #{maxPageId}) OR (gmt_create < #{lastGmtCreate}))
        		]]>
			</if>
	        
       	    <if test="bizCodeInList != null and bizCodeInList.size() > 0">
           	    AND biz_code IN
           	    <foreach item="bc" index="index" collection="bizCodeInList" open="(" separator="," close=")">
               	    #{bc}
           	    </foreach>
       	    </if>
       	    <if test="identityInList != null and identityInList.size() > 0">
           	    AND identity IN
           	    <foreach item="identity" index="index" collection="identityInList" open="(" separator="," close=")">
               	    #{identity}
           	    </foreach>
       	    </if>
       	    <if test="typeInList != null and typeInList.size() > 0">
           	    AND type IN
           	    <foreach item="type" index="index" collection="typeInList" open="(" separator="," close=")">
               	    #{type}
           	    </foreach>
       	    </if>
       	    <if test="expireTypeInList != null and expireTypeInList.size() > 0">
           	    AND expire_type IN
           	    <foreach item="et" index="index" collection="expireTypeInList" open="(" separator="," close=")">
               	    #{et}
           	    </foreach>
       	    </if>
	        
	        <if test="minId != null">
	            <![CDATA[
	            AND id >= #{minId} 
	        	]]>
	        </if>
	        <if test="maxId != null">
	            <![CDATA[
	            AND id <= #{maxId} 
	        	]]>
	        </if>
	        <if test="ids != null and ids.size() > 0">
	            AND id IN
	            <foreach item="id" index="index" collection="ids"
	                     open="(" separator="," close=")">
	                #{id}
	            </foreach>
	        </if>
	        <if test="gmtCreateRange != null and gmtCreateRange.start != null">
	            <![CDATA[
	            AND gmt_create >= #{gmtCreateRange.start} 
	        	]]>
	        </if>
	        <if test="gmtCreateRange != null and gmtCreateRange.end != null">
	            <![CDATA[
	            AND gmt_create <= #{gmtCreateRange.end} 
	        	]]>
	        </if>
	        <if test="gmtModifyRange != null and gmtModifyRange.start != null">
	            <![CDATA[
	            AND gmt_modified >= #{gmtModifyRange.start} 
	        	]]>
	        </if>
	        <if test="gmtModifyRange != null and gmtModifyRange.end != null">
	            <![CDATA[
	            AND gmt_modified <= #{gmtModifyRange.end} 
	        	]]>
	        </if>
        </where>
    </sql>
    
    
    <sql id="OrderBy">
        <choose>
	        <when test="orderByList != null and orderByList.size() > 0">
	            <foreach item="orderby" index="index" collection="orderByList" open="" separator="," close="">
                	${orderby.key} ${orderby.value}
            	</foreach>
	        </when>
	        <otherwise>
	            gmt_create DESC 
	        </otherwise>
        </choose>
    </sql>
    
    <select id="getById" resultMap="blackWhiteListMap">
    	SELECT  
    		<include refid="AllColumns" /> 
    	FROM black_white_list WHERE id = #{id} LIMIT 1
    </select>
    
    <select id="queryList" parameterType="${packagePrefix}.query.BlackWhiteListQuery" resultMap="blackWhiteListMap">
    	SELECT  
    		<include refid="AllColumns" />
    	FROM black_white_list
		<if test="forceIndex != null">
			FORCE INDEX(${forceIndex})
		</if>
		<include refid="Where_QueryCondition" />
		ORDER BY
    		<include refid="OrderBy" /> 
        LIMIT #{start}, #{limit}
    </select>

    
    <select id="count" parameterType="${packagePrefix}.query.BlackWhiteListQuery" resultType="java.lang.Integer">
    	SELECT count(id) 
    	FROM black_white_list  
    	<include refid="Where_QueryCondition" />
    </select>

    <insert id="insert" parameterType="${packagePrefix}.dataobject.BlackWhiteListDO" useGeneratedKeys="true" keyProperty="id">
        INSERT black_white_list 
        <include refid="InfoManageSet" />
    </insert>
    
    <insert id="insertBatch" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id"> 
	    INSERT INTO black_white_list(gmt_create,gmt_modified,creator,modifier,biz_code,identity,type,comment,relation_id,creator_id,expire_type,expire_time,is_deleted,attributes)  
	    VALUES 
	    <foreach collection="list" item="obj" index="index" separator=",">  
	       (now(),now(),#{obj.creator},#{obj.modifier},#{obj.bizCode},#{obj.identity},#{obj.type},#{obj.comment},#{obj.relationId},#{obj.creatorId},#{obj.expireType},#{obj.expireTime},#{obj.isDeleted},#{obj.attributes})  
	    </foreach>  
    </insert>

    <update id="update" parameterType="${packagePrefix}.dataobject.BlackWhiteListDO">
        UPDATE black_white_list 
        <include refid="InfoManageSet" />
        WHERE id = #{id} 
        <if test="version != null">
            AND version=#{version}
        </if>
    </update>
    
    <delete id="deleteById">
    	DELETE FROM black_white_list WHERE id = #{id}
    </delete>

	<update id="deleteByExpire">
		UPDATE black_white_list
		SET is_deleted = 1
		WHERE
		<![CDATA[
            expire_time <= now()
        ]]>
		and is_deleted = 0
	</update>

</mapper>
