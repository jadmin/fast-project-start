<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- Automatic generated on ${currentTime} by CrudCodeGenerator wirtten by Gerald Chen -->

<mapper namespace="${packagePrefix}.dao.MenuModuleDAO">

	<resultMap type="${packagePrefix}.dataobject.MenuModuleDO" id="menuModuleMap">
        <result property="id" column="id" />
        <result property="gmtCreate" column="gmt_create" />
        <result property="gmtModify" column="gmt_modified" />
        <result property="name" column="name" />
        <result property="uri" column="uri" />
        <result property="type" column="type" />
        <result property="parentId" column="parent_id" />
        <result property="iconCss" column="icon_css" />
        <result property="sort" column="sort" />
        <result property="remark" column="remark" />
        <result property="attributes" column="attributes" />
        <result property="creator" column="creator" />
        <result property="modifier" column="modifier" />

    </resultMap>
    
    <sql id="AllColumns">
		id,
		gmt_create,
		gmt_modified,
		name,
		uri,
		type,
		parent_id,
		icon_css,
		sort,
		remark,
		attributes,
		creator,
		modifier
    </sql>
    
    <sql id="InfoManageSet">
        <set>
			<if test="1 == 1">gmt_modified=now(),</if>
			<if test="name != null">name=#{name},</if>
			<if test="uri != null">uri=#{uri},</if>
			<if test="type != null">type=#{type},</if>
			<if test="parentId != null">parent_id=#{parentId},</if>
			<if test="iconCss != null">icon_css=#{iconCss},</if>
			<if test="sort != null">sort=#{sort},</if>
			<if test="remark != null">remark=#{remark},</if>
			<if test="attributes != null">attributes=#{attributes},</if>
			<if test="creator != null">creator=#{creator},</if>
			<if test="modifier != null">modifier=#{modifier},</if>

        </set>
    </sql>
    
    <sql id="Where_QueryCondition">
        <where>
			<if test="id != null">
			    id = #{id} 
			</if>
			<if test="parentId != null">
			    parent_id = #{parentId} 
			</if>

	        
	        <if test="minId != null">
	            <![CDATA[
	            AND id >= #{minId} 
	        	]]>
	        </if>
	        <if test="maxId != null">
	            <![CDATA[
	            AND id <= #{maxId} 
	        	]]>
	        </if>
	        <if test="ids != null and ids.size() > 0">
	            AND id IN
	            <foreach item="id" index="index" collection="ids"
	                     open="(" separator="," close=")">
	                #{id}
	            </foreach>
	        </if>
	        
	        <if test="typeInList != null and typeInList.size() > 0">
	            AND type IN
	            <foreach item="tp" index="index" collection="typeInList"
	                     open="(" separator="," close=")">
	                #{tp}
	            </foreach>
	        </if>
	        
	        <if test="gmtCreateRange != null and gmtCreateRange.start != null">
	            <![CDATA[
	            AND gmt_create >= #{gmtCreateRange.start} 
	        	]]>
	        </if>
	        <if test="gmtCreateRange != null and gmtCreateRange.end != null">
	            <![CDATA[
	            AND gmt_create <= #{gmtCreateRange.end} 
	        	]]>
	        </if>
	        <if test="gmtModifyRange != null and gmtModifyRange.start != null">
	            <![CDATA[
	            AND gmt_modified >= #{gmtModifyRange.start} 
	        	]]>
	        </if>
	        <if test="gmtModifyRange != null and gmtModifyRange.end != null">
	            <![CDATA[
	            AND gmt_modified <= #{gmtModifyRange.end} 
	        	]]>
	        </if>
        </where>
    </sql>
    
    
    <sql id="OrderBy">
        <choose>
	        <when test="orderByList != null and orderByList.size() > 0">
	            <foreach item="orderby" index="index" collection="orderByList" open="" separator="," close="">
                	${orderby.key} ${orderby.value}
            	</foreach>
	        </when>
	        <otherwise>
	            gmt_create DESC 
	        </otherwise>
        </choose>
    </sql>
    
    <select id="getById" resultMap="menuModuleMap">
    	SELECT  
    		<include refid="AllColumns" /> 
    	FROM auth_menu_module WHERE id = #{id} LIMIT 1
    </select>
    
    <select id="findRoleMenu" resultMap="menuModuleMap">
    	SELECT m.id, m.parent_id, m.name, m.type, m.uri, m.icon_css, m.attributes 
		FROM auth_menu_module m INNER JOIN (
 			SELECT menu_id FROM auth_role_menu WHERE 
 			  role_id IN
	           <foreach item="rid" index="index" collection="roleIdList"
	                     open="(" separator="," close=")">
	                #{rid}
	           </foreach>
		) b ON (m.id = b.menu_id AND m.type IN(1,2)) 
		ORDER BY m.parent_id ASC, m.sort ASC
    </select>
    
    <select id="queryList" parameterType="${packagePrefix}.query.MenuModuleQuery" resultMap="menuModuleMap">
    	SELECT  
    		<include refid="AllColumns" />
    	FROM auth_menu_module  
    	<if test="forceIndex != null">
		FORCE INDEX(${forceIndex}) 
    	</if>
    	<include refid="Where_QueryCondition" />
    	ORDER BY 
    		<include refid="OrderBy" /> 
        LIMIT #{start}, #{limit}
    </select>
    
    <select id="count" parameterType="${packagePrefix}.query.MenuModuleQuery" resultType="java.lang.Integer">
    	SELECT count(id) 
    	FROM auth_menu_module  
    	<if test="forceIndex != null">
		FORCE INDEX(${forceIndex}) 
    	</if>
    	<include refid="Where_QueryCondition" />
    </select>
    
    
    <select id="queryMaxSort" parameterType="${packagePrefix}.query.MenuModuleQuery" resultType="java.lang.Integer">
    	SELECT MAX(sort) as sort 
    	FROM auth_menu_module 
    	<include refid="Where_QueryCondition" />
    </select>
    

    <insert id="insert" parameterType="${packagePrefix}.dataobject.MenuModuleDO" useGeneratedKeys="true" keyProperty="id">
        INSERT auth_menu_module 
        <include refid="InfoManageSet" />
    </insert>
    
    <insert id="insertBatch" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id"> 
	    INSERT INTO auth_menu_module(gmt_create,gmt_modified,name,uri,type,parent_id,icon_css,sort,remark,attributes,creator,modifier)  
	    VALUES 
	    <foreach collection="list" item="obj" index="index" separator=",">  
	       (now(),now(),#{obj.name},#{obj.uri},#{obj.type},#{obj.parentId},#{obj.iconCss},#{obj.sort},#{obj.remark},#{obj.attributes},#{obj.creator},#{obj.modifier})  
	    </foreach>  
    </insert>

    <update id="update" parameterType="${packagePrefix}.dataobject.MenuModuleDO">
        UPDATE auth_menu_module 
        <include refid="InfoManageSet" />
        WHERE id = #{id} 
        <if test="version != null">
            AND version=#{version}
        </if>
    </update>
    
    <delete id="deleteById">
    	DELETE FROM auth_menu_module WHERE id = #{id}
    </delete>
    
    <select id="queryUserModuleResource" parameterType="java.util.List" resultMap="menuModuleMap">
        SELECT 
        	b.* 
		FROM auth_role_menu a INNER JOIN auth_menu_module b 
		ON(a.menu_id = b.id AND b.type=3) 
		WHERE a.role_id IN
		<foreach item="id" index="index" collection="roleIdList" open="(" separator="," close=")">
	        #{id}
	    </foreach>
    </select>
    

</mapper>