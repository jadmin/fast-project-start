<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- Automatic generated on ${currentTime} by CrudCodeGenerator wirtten by Gerald Chen -->

<mapper namespace="${packagePrefix}.dao.RoleDAO">

	<resultMap type="${packagePrefix}.dataobject.RoleDO" id="roleMap">
        <result property="id" column="id" />
        <result property="gmtCreate" column="gmt_create" />
        <result property="gmtModify" column="gmt_modified" />
        <result property="roleName" column="role_name" />
        <result property="roleCode" column="role_code" />
        <result property="status" column="status" />
        <result property="description" column="description" />
        <result property="creator" column="creator" />
        <result property="modifier" column="modifier" />

    </resultMap>
    
    <sql id="AllColumns">
		id,
		gmt_create,
		gmt_modified,
		role_name,
		role_code,
		status,
		description,
		creator,
		modifier
    </sql>
    
    <sql id="InfoManageSet">
        <set>
			<if test="1 == 1">gmt_modified=now(),</if>
			<if test="roleName != null">role_name=#{roleName},</if>
			<if test="roleCode != null">role_code=#{roleCode},</if>
			<if test="status != null">status=#{status},</if>
			<if test="description != null">description=#{description},</if>
			<if test="creator != null">creator=#{creator},</if>
			<if test="modifier != null">modifier=#{modifier},</if>

        </set>
    </sql>
    
    <sql id="Where_QueryCondition">
        <where>
			<if test="id != null">
			    id = #{id} 
			</if>
     		<if test="status != null">
			    AND status = #{status} 
     		</if>
     		<if test="roleNameLike != null">
			    AND role_name LIKE concat('%', #{roleNameLike}, '%') 
     		</if>
     		<if test="roleCodeNotEuqal != null">
     		  <![CDATA[
			    AND role_code <> #{roleCodeNotEuqal} 
			  ]]>
     		</if>

	        
	        <if test="minId != null">
	            <![CDATA[
	            AND id >= #{minId} 
	        	]]>
	        </if>
	        <if test="maxId != null">
	            <![CDATA[
	            AND id <= #{maxId} 
	        	]]>
	        </if>
	        <if test="ids != null and ids.size() > 0">
	            AND id IN
	            <foreach item="id" index="index" collection="ids"
	                     open="(" separator="," close=")">
	                #{id}
	            </foreach>
	        </if>
	        <if test="gmtCreateRange != null and gmtCreateRange.start != null">
	            <![CDATA[
	            AND gmt_create >= #{gmtCreateRange.start} 
	        	]]>
	        </if>
	        <if test="gmtCreateRange != null and gmtCreateRange.end != null">
	            <![CDATA[
	            AND gmt_create <= #{gmtCreateRange.end} 
	        	]]>
	        </if>
	        <if test="gmtModifyRange != null and gmtModifyRange.start != null">
	            <![CDATA[
	            AND gmt_modified >= #{gmtModifyRange.start} 
	        	]]>
	        </if>
	        <if test="gmtModifyRange != null and gmtModifyRange.end != null">
	            <![CDATA[
	            AND gmt_modified <= #{gmtModifyRange.end} 
	        	]]>
	        </if>
        </where>
    </sql>
    
    
    <sql id="OrderBy">
        <choose>
	        <when test="orderByList != null and orderByList.size() > 0">
	            <foreach item="orderby" index="index" collection="orderByList" open="" separator="," close="">
                	${orderby.key} ${orderby.value}
            	</foreach>
	        </when>
	        <otherwise>
	            gmt_create DESC 
	        </otherwise>
        </choose>
    </sql>
    
    <select id="getById" resultMap="roleMap">
    	SELECT  
    		<include refid="AllColumns" /> 
    	FROM auth_role WHERE id = #{id} LIMIT 1
    </select>

	<select id="findUserRoleList" parameterType="java.lang.Long" resultMap="roleMap">
    	SELECT 
		   a.role_id as id,
		   b.role_code,
		   b.role_name
		FROM auth_user_role a 
		INNER JOIN auth_role b ON (a.role_id = b.id AND a.user_id=#{userId} AND b.status=1)
    </select>
    
    <select id="queryList" parameterType="${packagePrefix}.query.RoleQuery" resultMap="roleMap">
    	SELECT  
    		<include refid="AllColumns" />
    	FROM auth_role  
    	<if test="forceIndex != null">
		FORCE INDEX(${forceIndex}) 
    	</if>
    	<include refid="Where_QueryCondition" />
    	ORDER BY 
    		<include refid="OrderBy" /> 
        LIMIT #{start}, #{limit}
    </select>
    
    <select id="count" parameterType="${packagePrefix}.query.RoleQuery" resultType="java.lang.Integer">
    	SELECT count(id) 
    	FROM auth_role  
    	<if test="forceIndex != null">
		FORCE INDEX(${forceIndex}) 
    	</if>
    	<include refid="Where_QueryCondition" />
    </select>

    <insert id="insert" parameterType="${packagePrefix}.dataobject.RoleDO" useGeneratedKeys="true" keyProperty="id">
        INSERT auth_role 
        <include refid="InfoManageSet" />
    </insert>
    
    <insert id="insertBatch" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id"> 
	    INSERT INTO auth_role(gmt_create,gmt_modified,role_name,role_code,status,description,creator,modifier)  
	    VALUES 
	    <foreach collection="list" item="obj" index="index" separator=",">  
	       (now(),now(),#{obj.roleName},#{obj.roleCode},#{obj.status},#{obj.description},#{obj.creator},#{obj.modifier})  
	    </foreach>  
    </insert>

    <update id="update" parameterType="${packagePrefix}.dataobject.RoleDO">
        UPDATE auth_role 
        <include refid="InfoManageSet" />
        WHERE id = #{id} 
        <if test="version != null">
            AND version=#{version}
        </if>
    </update>
    
    <delete id="deleteById">
    	DELETE FROM auth_role WHERE id = #{id}
    </delete>
    

</mapper>