<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- Automatic generated on ${currentTime} by CrudCodeGenerator wirtten by Gerald Chen -->

<mapper namespace="${packagePrefix}.dao.MyTestDAO">

	<resultMap type="${packagePrefix}.dataobject.MyTestDO" id="myTestMap">
        <result property="id" column="id" />
        <result property="username" column="username" />
        <result property="mobile" column="mobile" />
        <result property="email" column="email" />
        <result property="password" column="password" />
        <result property="birthday" column="birthday" />
        <result property="userType" column="user_type" />
        <result property="employeeNo" column="employee_no" />
        <result property="gmtCreate" column="gmt_create" />
        <result property="gmtModify" column="gmt_modified" />
        <result property="attributes" column="attributes" />
        <result property="userNick" column="user_nick" />
        <result property="realName" column="real_name" />
        <result property="sex" column="sex" />
        <result property="creator" column="creator" />
        <result property="modifier" column="modifier" />

    </resultMap>
    
    <sql id="AllColumns">
		id,
		username,
		mobile,
		email,
		password,
		birthday,
		user_type,
		employee_no,
		gmt_create,
		gmt_modified,
		attributes,
		user_nick,
		real_name,
		sex,
		creator,
		modifier
    </sql>
    
    <sql id="InfoManageSet">
        <set>
			<if test="username != null">username=#{username},</if>
			<if test="mobile != null">mobile=#{mobile},</if>
			<if test="email != null">email=#{email},</if>
			<if test="password != null">password=#{password},</if>
			<if test="birthday != null">birthday=#{birthday},</if>
			<if test="userType != null">user_type=#{userType},</if>
			<if test="employeeNo != null">employee_no=#{employeeNo},</if>
			<if test="1 == 1">gmt_modified=now(),</if>
			<if test="attributes != null">attributes=#{attributes},</if>
			<if test="userNick != null">user_nick=#{userNick},</if>
			<if test="realName != null">real_name=#{realName},</if>
			<if test="sex != null">sex=#{sex},</if>
			<if test="creator != null">creator=#{creator},</if>
			<if test="modifier != null">modifier=#{modifier},</if>

        </set>
    </sql>
    
    <sql id="Where_QueryCondition">
        <where>
			<if test="id != null">
			    id = #{id} 
			</if>
     		<if test="username != null">
			    AND username = #{username} 
     		</if>
     		<if test="mobile != null">
			    AND mobile = #{mobile} 
     		</if>
     		<if test="sex != null">
			    AND sex = #{sex} 
     		</if>
     		<if test="usernameLike != null">
			    AND username LIKE concat('%', #{usernameLike}, '%') 
     		</if>
     		<if test="userNickNotLike != null">
			    AND user_nick NOT LIKE concat('%', #{userNickNotLike}, '%') 
     		</if>
     		<if test="usernameNotLike != null">
			    AND username NOT LIKE concat('%', #{usernameNotLike}, '%') 
     		</if>

	        
     		<if test="userTypeInList != null and userTypeInList.size() > 0">
			    AND user_type IN
			    <foreach item="ut" index="index" collection="userTypeInList" open="(" separator="," close=")">
                	  #{ut}
			    </foreach>
     		</if>
     		<if test="employeeNoInList != null and employeeNoInList.size() > 0">
			    AND employee_no IN
			    <foreach item="en" index="index" collection="employeeNoInList" open="(" separator="," close=")">
                	  #{en}
			    </foreach>
     		</if>
     		<if test="userTypeNotInList != null and userTypeNotInList.size() > 0">
			    AND user_type NOT IN
			    <foreach item="ut" index="index" collection="userTypeNotInList" open="(" separator="," close=")">
                	  #{ut}
			    </foreach>
     		</if>
     		<if test="realNameNotInList != null and realNameNotInList.size() > 0">
			    AND real_name NOT IN
			    <foreach item="rn" index="index" collection="realNameNotInList" open="(" separator="," close=")">
                	  #{rn}
			    </foreach>
     		</if>
	        
	        <if test="minId != null">
	            <![CDATA[
	            AND id >= #{minId} 
	        	]]>
	        </if>
	        <if test="maxId != null">
	            <![CDATA[
	            AND id <= #{maxId} 
	        	]]>
	        </if>
	        <if test="ids != null and ids.size() > 0">
	            AND id IN
	            <foreach item="id" index="index" collection="ids"
	                     open="(" separator="," close=")">
	                #{id}
	            </foreach>
	        </if>
	        <if test="gmtCreateRange != null and gmtCreateRange.start != null">
	            <![CDATA[
	            AND gmt_create >= #{gmtCreateRange.start} 
	        	]]>
	        </if>
	        <if test="gmtCreateRange != null and gmtCreateRange.end != null">
	            <![CDATA[
	            AND gmt_create <= #{gmtCreateRange.end} 
	        	]]>
	        </if>
	        <if test="gmtModifyRange != null and gmtModifyRange.start != null">
	            <![CDATA[
	            AND gmt_modified >= #{gmtModifyRange.start} 
	        	]]>
	        </if>
	        <if test="gmtModifyRange != null and gmtModifyRange.end != null">
	            <![CDATA[
	            AND gmt_modified <= #{gmtModifyRange.end} 
	        	]]>
	        </if>
        </where>
    </sql>
    
    
    <sql id="OrderBy">
        <choose>
	        <when test="orderByList != null and orderByList.size() > 0">
	            <foreach item="orderby" index="index" collection="orderByList" open="" separator="," close="">
                	${orderby.key} ${orderby.value}
            	</foreach>
	        </when>
	        <otherwise>
	            gmt_create DESC 
	        </otherwise>
        </choose>
    </sql>
    
    <select id="getById" resultMap="myTestMap">
    	SELECT  
    		<include refid="AllColumns" /> 
    	FROM my_test WHERE id = #{id} LIMIT 1
    </select>
    
    <select id="queryList" parameterType="${packagePrefix}.query.MyTestQuery" resultMap="myTestMap">
    	SELECT  
    		<include refid="AllColumns" />
    	FROM my_test  
    	<if test="forceIndex != null">
		FORCE INDEX(${forceIndex}) 
    	</if>
    	<include refid="Where_QueryCondition" />
    	ORDER BY 
    		<include refid="OrderBy" /> 
        LIMIT #{start}, #{limit}
    </select>
    
    <select id="count" parameterType="${packagePrefix}.query.MyTestQuery" resultType="java.lang.Integer">
    	SELECT count(id) 
    	FROM my_test  
    	<if test="forceIndex != null">
		FORCE INDEX(${forceIndex}) 
    	</if>
    	<include refid="Where_QueryCondition" />
    </select>

    <insert id="insert" parameterType="${packagePrefix}.dataobject.MyTestDO" useGeneratedKeys="true" keyProperty="id">
        INSERT my_test 
        <include refid="InfoManageSet" />
    </insert>
    
    <insert id="insertBatch" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id"> 
	    INSERT INTO my_test(username,mobile,email,password,birthday,user_type,employee_no,gmt_create,gmt_modified,attributes,user_nick,real_name,sex,creator,modifier)  
	    VALUES 
	    <foreach collection="list" item="obj" index="index" separator=",">  
	       (#{obj.username},#{obj.mobile},#{obj.email},#{obj.password},#{obj.birthday},#{obj.userType},#{obj.employeeNo},now(),now(),#{obj.attributes},#{obj.userNick},#{obj.realName},#{obj.sex},#{obj.creator},#{obj.modifier})  
	    </foreach>  
    </insert>

    <update id="update" parameterType="${packagePrefix}.dataobject.MyTestDO">
        UPDATE my_test 
        <include refid="InfoManageSet" />
        WHERE id = #{id} 
        <if test="version != null">
            AND version=#{version}
        </if>
    </update>
    
    <delete id="deleteById">
    	DELETE FROM my_test WHERE id = #{id}
    </delete>
    

</mapper>